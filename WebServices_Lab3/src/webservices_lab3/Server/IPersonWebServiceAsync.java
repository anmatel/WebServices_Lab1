package webservices_lab3.Server;

import java.util.List;
import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import webservices_lab3.Client.CreatePersonResponse;
import webservices_lab3.Client.DeletePersonResponse;
import webservices_lab3.Client.GetPersonsResponse;
import webservices_lab3.Client.IllegalEnteredDataException;
import webservices_lab3.Client.ObjectFactory;
import webservices_lab3.Client.UpdatePersonResponse;
import webservices_lab3.Errors.ThrottlingException;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "PersonWebService", targetNamespace = "http://Server.webservices_lab3/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface IPersonWebServiceAsync {


    /**
     * 
     * @param arg1
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     * @throws IllegalEnteredDataException
     * @throws webservices_lab3.Errors.ThrottlingException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPersons", targetNamespace = "http://Server.webservices_lab3/", className = "webservices_lab3.Client.GetPersons")
    @ResponseWrapper(localName = "getPersonsResponse", targetNamespace = "http://Server.webservices_lab3/", className = "webservices_lab3.Client.GetPersonsResponse")
    @Action(input = "http://Server.webservices_lab3/PersonWebService/getPersonsRequest", output = "http://Server.webservices_lab3/PersonWebService/getPersonsResponse", fault = {
        @FaultAction(className = IllegalEnteredDataException.class, value = "http://Server.webservices_lab3/PersonWebService/getPersons/Fault/IllegalEnteredDataException"),
        @FaultAction(className = ThrottlingException.class, value = "http://Server.webservices_lab3/PersonWebService/getPersons/Fault/ThrottlingException")
    })
    public Future<?> getPersonsAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        webservices_lab3.Client.Person arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        webservices_lab3.Client.PostgreSQLDAO arg1,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetPersonsResponse> asyncHandler)
        throws IllegalEnteredDataException, ThrottlingException;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     * @throws IllegalEnteredDataException
     * @throws webservices_lab3.Errors.ThrottlingException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updatePerson", targetNamespace = "http://Server.webservices_lab3/", className = "webservices_lab3.Client.UpdatePerson")
    @ResponseWrapper(localName = "updatePersonResponse", targetNamespace = "http://Server.webservices_lab3/", className = "webservices_lab3.Client.UpdatePersonResponse")
    @Action(input = "http://Server.webservices_lab3/PersonWebService/updatePersonRequest", output = "http://Server.webservices_lab3/PersonWebService/updatePersonResponse", fault = {
        @FaultAction(className = IllegalEnteredDataException.class, value = "http://Server.webservices_lab3/PersonWebService/updatePerson/Fault/IllegalEnteredDataException"),
        @FaultAction(className = ThrottlingException.class, value = "http://Server.webservices_lab3/PersonWebService/updatePerson/Fault/ThrottlingException")
    })
    public Future<?> updatePersonAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        webservices_lab3.Client.Person arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        webservices_lab3.Client.PostgreSQLDAO arg2,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<UpdatePersonResponse> asyncHandler)
        throws IllegalEnteredDataException, ThrottlingException;

    /**
     * 
     * @param arg1
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     * @throws IllegalEnteredDataException
     * @throws webservices_lab3.Errors.ThrottlingException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createPerson", targetNamespace = "http://Server.webservices_lab3/", className = "webservices_lab3.Client.CreatePerson")
    @ResponseWrapper(localName = "createPersonResponse", targetNamespace = "http://Server.webservices_lab3/", className = "webservices_lab3.Client.CreatePersonResponse")
    @Action(input = "http://Server.webservices_lab3/PersonWebService/createPersonRequest", output = "http://Server.webservices_lab3/PersonWebService/createPersonResponse", fault = {
        @FaultAction(className = IllegalEnteredDataException.class, value = "http://Server.webservices_lab3/PersonWebService/createPerson/Fault/IllegalEnteredDataException"),
        @FaultAction(className = ThrottlingException.class, value = "http://Server.webservices_lab3/PersonWebService/createPerson/Fault/ThrottlingException")
    })
    public Future<?> createPersonAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        webservices_lab3.Client.Person arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        webservices_lab3.Client.PostgreSQLDAO arg1,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<CreatePersonResponse> asyncHandler)
        throws IllegalEnteredDataException, ThrottlingException;

    /**
     * 
     * @param arg1
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     * @throws IllegalEnteredDataException
     * @throws webservices_lab3.Errors.ThrottlingException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deletePerson", targetNamespace = "http://Server.webservices_lab3/", className = "webservices_lab3.Client.DeletePerson")
    @ResponseWrapper(localName = "deletePersonResponse", targetNamespace = "http://Server.webservices_lab3/", className = "webservices_lab3.Client.DeletePersonResponse")
    @Action(input = "http://Server.webservices_lab3/PersonWebService/deletePersonRequest", output = "http://Server.webservices_lab3/PersonWebService/deletePersonResponse", fault = {
        @FaultAction(className = IllegalEnteredDataException.class, value = "http://Server.webservices_lab3/PersonWebService/deletePerson/Fault/IllegalEnteredDataException"),
        @FaultAction(className = ThrottlingException.class, value = "http://Server.webservices_lab3/PersonWebService/deletePerson/Fault/ThrottlingException")
    })
    public Future<?> deletePersonAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        webservices_lab3.Client.PostgreSQLDAO arg1,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<DeletePersonResponse> asyncHandler)
        throws IllegalEnteredDataException, ThrottlingException;

}
