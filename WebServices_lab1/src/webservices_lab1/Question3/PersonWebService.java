package webservices_lab1.Client;

import java.util.List;
import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "PersonWebService", targetNamespace = "http://webservices_lab1/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PersonWebService {


    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<webservices_lab1.Client.Person>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPersons", targetNamespace = "http://webservices_lab1/", className = "webservices_lab1.Client.GetPersons")
    @ResponseWrapper(localName = "getPersonsResponse", targetNamespace = "http://webservices_lab1/", className = "webservices_lab1.Client.GetPersonsResponse")
    @Action(input = "http://webservices_lab1/PersonWebService/getPersonsRequest", output = "http://webservices_lab1/PersonWebService/getPersonsResponse")
    public List<Person> getPersons(
        @WebParam(name = "arg0", targetNamespace = "")
        Person arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        PostgreSQLDAO arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<com.projects.wst.client.GetPersonsResponse>
     */
    @WebMethod(operationName = "getPersons")
    @RequestWrapper(localName = "getPersons", targetNamespace = "http://webservices_lab1/", className = "webservices_lab1.Client.GetPersons")
    @ResponseWrapper(localName = "getPersonsResponse", targetNamespace = "http://webservices_lab1/", className = "webservices_lab1.Client.GetPersonsResponse")
    public Response<GetPersonsResponse> getPersonsAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        Person arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        PostgreSQLDAO arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "getPersons")
    @RequestWrapper(localName = "getPersons", targetNamespace = "http://webservices_lab1/", className = "webservices_lab1.Client.GetPersons")
    @ResponseWrapper(localName = "getPersonsResponse", targetNamespace = "http://webservices_lab1/", className = "webservices_lab1.Client.GetPersonsResponse")
    public Future<?> getPersonsAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        Person arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        PostgreSQLDAO arg1,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetPersonsResponse> asyncHandler);

}